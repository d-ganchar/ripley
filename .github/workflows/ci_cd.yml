name: Push commit
on:
  release:
    types: [ created ]
  push:
    branches:
      - '*'

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      UV_PYTHON: 3.9
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
        with:
          python-version: 3.9

      - name: Install dependencies
        run: uv sync --dev

      - name: Check formatting with Ruff
        run: ruff check

      - name: Build
        run: |
          if [[ '${{ github.event_name }}' = 'release' ]]; then
             sed -i -e "s/0.dev.0/$GITHUB_REF_NAME/g" pyproject.toml
          fi
          uv build
          mkdir ripley_build
          mv ./dist ./ripley_build
      - name: Upload ripley package
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: ripley_build
          retention-days: 90

  tests:
    runs-on: ubuntu-22.04
    permissions: write-all
    needs: [ build ]
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.8", "3.9", "3.10", "3.11", "3.12" ]
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: uv sync --dev

      - name: Download ripley dist
        uses: actions/download-artifact@v4
        with:
          name: dist

      - name: Install ripley from dist
        run: uv pip install dist/$(ls ./dist/ | grep ".tar.gz")

      - name: Download ripley package
        uses: actions/download-artifact@v4
        with:
          name: dist
      - uses: hoverkraft-tech/compose-action@v2.0.2
        with:
          services: |
            clickhouse
            s3
          up-flags: "-d"
      - name: Install test dependencies, ripley and run tests
        run: |
          rm -r ripley
          uv add pytest-cov
          pytest --doctest-modules --junitxml=test-results-${{ matrix.python-version }}.xml
      - name: Upload pytest results
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.python-version }}.xml
          path: test-results-${{ matrix.python-version }}.xml
          retention-days: 90
        if: always()
      - name: Download test report
        uses: actions/download-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.python-version }}.xml
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action/macos@v2
        if: always()
        with:
          files: |
            test-results-${{ matrix.python-version }}.xml

  publish_to_PyPi:
    runs-on: ubuntu-22.04
    needs: [ tests ]
    if: github.event_name == 'release' && github.event.action == 'created'
    environment:
      name: pypi
      url: https://pypi.org/p/ripley
    permissions:
      id-token: write
    steps:
      - name: Download ripley package
        uses: actions/download-artifact@v4
        with:
          name: dist
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
